model PurchaseItems {
  id             Int       @id @default(autoincrement())
  
  // References to batch and product
  batch          Purchase @relation( fields: [batchId], references: [id], onDelete: Cascade)
  batchId        Int
  product        Product   @relation(fields: [productId], references: [id], onDelete: Restrict)
  productId      Int
  
  // Product-specific quantities and pricing within this batch
  initialQuantity Int      // Original quantity received for this product
  currentQuantity Int      // Current available quantity for this product
  
  costPrice      Decimal   @db.Decimal(10, 2)  // Cost price for this product
  retailPrice    Decimal   @db.Decimal(10, 2)  // Retail price for this product
  
  // User accountability fields
  createdBy      User      @relation("PurchaseItemsCreatedBy", fields: [createdById], references: [id], onDelete: Restrict)
  createdById    Int
  updatedBy      User?     @relation("PurchaseItemsUpdatedBy", fields: [updatedById], references: [id], onDelete: Restrict)
  updatedById    Int?
  
  // Status and audit
  status         PurchaseStatus @default(ACTIVE)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  
  // Optional: Track reasons for changes
  lastUpdateReason String? // Reason for the last update  

  //References
  returns PurchaseReturn[]
 
  
  @@index([batchId])
  @@index([productId])
  @@index([status])
  @@index([createdById])
  @@index([updatedById])
  @@unique([batchId, productId]) 
  @@map("purchase_items")
  

}